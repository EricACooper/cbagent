Feature: ability to see graphs even while experiments are still running

Feature: ability to dynamically drill-down into data like google finance

Feature: graph multiple variables in one graph

Feature: ability to compare >=1 results from different builds

Feature: ability to compare >=1 results from different runs of the same build

Feature: ability to compare >=1 results from different hardware environments

Feature: ability to support distinguish different phases (load, index, access, etc)

Feature: compute and graph aggregates like min, max, avg, stddev

Feature: compute and graph running averages

Feature: output multiple graphs in one document

Feature: output executive summary tables

Feature: output executive green-versus-red bar charts

Feature: output description of each graph or metric

Feature: output page numbers

Feature: documents have reasonable auto-generated names

Feature: support archival formats like PDF

Feature: output includes testrunner version, test.ini, resource.conf, build, run, datetime

Feature: emit cluster aggregate graphs

Feature: emit node aggregate graphs

Feature: emit bucket aggregate graphs

Feature: emit vbucket level graphs

Feature: emit per-client level graphs

Feature: emit per-proxy level graphs

Feature: can drill-down to 10 second-level stats across the entire runs

Feature: existing R-based graphs still work

Feature: works on local VM's

Feature: works on EC2

Feature: works on multiple platforms including linux and windows

Feature: easily add new metrics

Feature: support compression for lower disk usage

Feature: ability to archive subset of older data out-of-the-way if disks get full

Feature: ability to handle gaps in data

Feature: ability to handle missing in metrics, such as when comparing old runs with new runs

Feature: licenses are shippable friendly

Feature: entire system is packagable/shippable to customers

